#!usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function, division
import os
import argparse
import ast
import sys

from GANDLF import version
from GANDLF.cli import pot_run, copyrightMessage
from GANDLF.utils import load_model

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog="GANDLF",
        formatter_class=argparse.RawTextHelpFormatter,
        description="Semantic segmentation, regression, and classification for medical images using Deep Learning.\n\n"
        + copyrightMessage,
    )
    parser.add_argument(
        "-c",
        "--config",
        "--parameters_file",
        metavar="",
        type=str,
        required=True,
        help="The configuration file (contains all the information related to the NNCF POT session)",
    )
    parser.add_argument(
        "-i",
        "--inputdata",
        "--data_path",
        metavar="",
        type=str,
        required=True,
        help="Data CSV file that is used for POT calibration",
    )
    parser.add_argument(
        "-m",
        "--modeldir",
        metavar="",
        type=str,
        help="Location of previous training session output",
    )
    parser.add_argument(
        "-o",
        "--outputdir",
        "--output_path",
        metavar="",
        type=str,
        help="Location to save the output of the POT session. ",
    )

    parser.add_argument(
        "-v",
        "--version",
        action="version",
        version="%(prog)s v{}".format(version) + "\n\n" + copyrightMessage,
        help="Show program's version number and exit.",
    )

    # This is a dummy argument that exists to trigger MLCube mounting requirements.
    # Do not remove.
    parser.add_argument("-rawinput", "--rawinput", help=argparse.SUPPRESS)

    args = parser.parse_args()
    if args.modeldir is None and args.outputdir:
        args.modeldir = args.outputdir

    assert args.modeldir is not None, "Missing required parameter: modeldir"

    if os.path.isdir(args.inputdata):
        # Is this a fine assumption to make?
        # Medperf models receive the data generated by the data preparator mlcube
        # We can therefore ensure the output of that mlcube contains a data.csv file
        filename = "data.csv"
        args.inputdata = os.path.join(args.inputdata, filename)

    # config file should always be present
    if not (os.path.isfile(args.config)):
        sys.exit("ERROR: Configuration file not found!")

    try:
        pot_run(
            args.inputdata,
            args.config,
            args.modeldir,
            args.outputdir,
        )
    except Exception as e:
        sys.exit("Error in GANDLF pot:", e)

    print("Finished.")
